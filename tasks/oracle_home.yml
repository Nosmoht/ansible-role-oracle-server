---
- name: Ensure unpack directory
  file:
    name: '{{ oracle_db_home.unpack_directory }}'
    owner: '{{ oracle_db_owner_user_name }}'
    group: '{{ oracle_inventory_group_name }}'
    mode: '0775'
    state: directory

- name: Unzip installation files
  become: true
  become_user: '{{ oracle_db_owner_user_name }}'
  become_method: sudo
  shell: 'unzip -u -o {{ oracle_db_home.installation_files_directory }}/{{ item }} -d {{ oracle_db_home.unpack_directory }}'
  with_items: oracle_db_home_installation_files

- name: Ensure response file
  become: true
  become_user: '{{ oracle_db_owner_user_name }}'
  become_method: sudo
  shell: cp {{ oracle_db_home.unpack_directory}}/database/response/db_install.rsp {{ oracle_db_home.response_file }}
  args:
    creates: '{{ oracle_db_home.response_file }}'

- name: Ensure parameters in response file
  lineinfile:
    dest: '{{ oracle_db_home.response_file }}'
    regexp: ^({{ item.name }})=
    line: \1={{ item.value }}
    backrefs: true
    state: present
  with_items:
  - name: ORACLE_HOME
    value: '{{ oracle_db_home.path }}'
  - name: oracle.install.option
    value: INSTALL_DB_SWONLY
  - name: UNIX_GROUP_NAME
    value: '{{ oracle_inventory_group_name }}'
  - name: INVENTORY_LOCATION
    value: '{{ oracle_inventory_directory }}'
  - name: ORACLE_BASE
    value: '{{ oracle_db_oracle_base }}'
  - name: oracle.install.db.DBA_GROUP
    value: '{{ oracle_db_osdba_group_name }}'
  - name: oracle.install.db.OPER_GROUP
    value: '{{ oracle_db_osoper_group_name }}'
  - name: oracle.install.db.BACKUPDBA_GROUP
    value: '{{ oracle_db_osbackupdba_group_name }}'
  - name: oracle.install.db.DGDBA_GROUP
    value: '{{ oracle_db_osdgdba_group_name }}'
  - name: oracle.install.db.KMDBA_GROUP
    value: '{{ oracle_db_oskmdba_group_name }}'
  - name: oracle.install.db.optionalComponents
    value: '{{ oracle_db_home.optionalComponents | default("") }}'
  - name: oracle.installer.autoupdates.option
    value: SKIP_UPDATES
  - name: DECLINE_SECURITY_UPDATES
    value: true
  - name: oracle.install.db.InstallEdition
    value: '{{ oracle_db_home.edition }}'

- name: Run Oracle Universal Installer Using a Response File
  become: true
  become_user: '{{ oracle_db_owner_user_name }}'
  become_method: sudo
  shell: '{{ oracle_db_home.unpack_directory }}/database/runInstaller -silent -responseFile {{ oracle_db_home.response_file }} -waitforcompletion -force'
  register: oracle_db_home_install
  failed_when: oracle_db_home_install.stdout.find('root.sh') == -1

- name: Execute orainstRoot.sh as root
  become: true
  become_user: root
  become_method: sudo
  shell: '{{ oracle_inventory_directory }}/orainstRoot.sh'
  when: oracle_db_home_install.stdout.find('orainstRoot.sh') != -1

- name: Execute root.sh as root
  become: true
  become_user: root
  become_method: sudo
  shell: '{{ oracle_db_home.path }}/root.sh'
  when: oracle_db_home_install.stdout.find('root.sh') != -1

- name: Ensure Oracle OPatch
  become: true
  become_user: '{{ oracle_db_owner_user_name }}'
  become_method: sudo
  shell: 'unzip -u -o {{ oracle_db_home.installation_files_directory }}/{{ oracle_db_home.opatch_patch_file }} -d {{ oracle_db_home.path }}'
  when: oracle_db_home_install.changed and oracle_db_home.opatch_patch_file is defined
  register: oracle_opatch_unpack_results
  changed_when: oracle_opatch_unpack_results.stdout.find('inflating') != 1
  tags: oracle_opatch_install
